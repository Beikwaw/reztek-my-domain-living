rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return request.auth != null &&
        (request.auth.token.email == 'obsadmin@mydomainliving.co.za' ||
         exists(/databases/$(database)/documents/admins/$(request.auth.uid)));
    }

    // Public data
    match /public/{document=**} {
      allow read: if true;
    }

    // Admins collection
    match /admins/{userId} {
      allow read: if isAuthenticated();
      allow write: if request.auth != null && 
        (request.auth.uid == userId || isAdmin());
    }

    // Tenants collection
    match /tenants/{userId} {
      allow read, write: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
    }

    // Maintenance Requests
    match /maintenanceRequests/{requestId} {
      allow read, create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && 
        (request.auth.uid == resource.data.tenantId || isAdmin());
    }

    // Feedback
    match /feedback/{feedbackId} {
      allow read, create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && 
        (request.auth.uid == resource.data.tenantId || isAdmin());
    }

    // Stock
    match /stock/{itemId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Admins get full access as fallback (must come last)
    match /{document=**} {
      allow read, write: if isAdmin();
    }
  }
}
